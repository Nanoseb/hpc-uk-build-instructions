CC = mpiicc -fopenmp
CXX = mpiicpc -fopenmp
FC = mpiifort -fopenmp
LD = mpiifort -fopenmp
AR = ar -r

CP2K_ROOT=/work/z04/z04/hjudge/CP2K/cp2k-9.1
DATA_DIR=/work/z04/z04/hjudge/CP2K/cp2k-9.1/data

# Provides PLUMED_DEPENDENCIES

include $(CP2K_ROOT)/libs/plumed/lib/plumed/src/lib/Plumed.inc.static

DFLAGS   = -D__MKL -D__FFTW3 \
	   -D__parallel -D__SCALAPACK \
	   -D__ELPA -D__LIBXSMM -D__PLUMED2 -D__SPGLIB \
	   -D__LIBXC -D__LIBINT

CFLAGS   = $(DFLAGS) -O2 -funroll-loops -fno-omit-frame-pointer \
           -g -traceback -mtune=native -march=native -I$(CP2K_ROOT)/libs/libxsmm/include 

FCFLAGS  = $(DFLAGS) $(CFLAGS) \
           -I$(MKLROOT)/include \
           -I$(CP2K_ROOT)/libs/libint/include  \
           -I$(CP2K_ROOT)/libs/libxsmm/include \
           -I$(CP2K_ROOT)/libs/libxc/include   \
           -I$(CP2K_ROOT)/libs/fftw/include   \
           -I$(CP2K_ROOT)/libs/elpa-openmp/include/elpa_openmp-2021.11.002/modules \
           -I$(CP2K_ROOT)/libs/elpa-openmp/include/elpa_openmp-2021.11.002/elpa

LDFLAGS  =  -static-intel
LDFLAGS_C = -static-intel -nofor_main

MKL_LIB  = ${MKLROOT}/lib/intel64

LIBS    = -L$(CP2K_ROOT)/libs/libint/lib -lint2     \
          -L$(CP2K_ROOT)/libs/libxsmm/lib -lxsmmf -lxsmm -lxsmmext \
          -L$(CP2K_ROOT)/libs/libxc/lib -lxcf90 -lxcf03 -lxc       \
          -L$(CP2K_ROOT)/libs/elpa-openmp/lib -lelpa_openmp            \
          $(CP2K_ROOT)/libs/spglib/lib64/libsymspg.a                 \
          $(PLUMED_DEPENDENCIES)        \
          -L$(CP2K_ROOT)/libs/fftw/lib -lfftw3 -lz -ldl -lstdc++         \
          $(MKL_LIB)/libmkl_scalapack_lp64.a -Wl,--start-group \
	  $(MKL_LIB)/libmkl_intel_lp64.a ${MKL_LIB}/libmkl_sequential.a \
	  $(MKL_LIB)/libmkl_core.a \
	  ${MKL_LIB}/libmkl_blacs_intelmpi_lp64.a -Wl,--end-group \
	  -lpthread -lm



# Required due to memory leak that occurs if high optimisations are used
mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F
			 $(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
